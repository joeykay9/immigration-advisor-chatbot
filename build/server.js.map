{"version":3,"sources":["../src/server.js"],"names":["dotenv","config","app","router","bodyParserJSON","bodyParser","json","bodyParserURLEncoded","urlencoded","extended","use","req","res","next","console","log","body","CurrentTaskConfidence","responseObject","get","send","listen","process","env","PORT"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,MAAM,GAAG,sBAAf;;AACA,IAAMC,cAAc,GAAGC,uBAAWC,IAAX,EAAvB;;AACA,IAAMC,oBAAoB,GAAGF,uBAAWG,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAA7B;;AAEAP,GAAG,CAACQ,GAAJ,CAAQN,cAAR;AACAF,GAAG,CAACQ,GAAJ,CAAQH,oBAAR;AAEAJ,MAAM,CAACO,GAAP,CAAW,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;;AACA,MAAGL,GAAG,CAACK,IAAJ,CAASC,qBAAT,IAAkC,GAArC,EAAyC;AACrC,QAAIC,cAAc,GAAG;AACjB,iBAAW,CACP;AACI,oBAAY;AADhB,OADO;AADM,KAArB;AAQA,WAAON,GAAG,CAACN,IAAJ,CAASY,cAAT,CAAP;AACH;;AAEDL,EAAAA,IAAI;AACP,CAfD;AAiBAV,MAAM,CAACgB,GAAP,CAAW,GAAX,EAAgB,UAACR,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACQ,IAAJ,CAAS,cAAT,CAAd;AAAA,CAAhB;AAEA,wBAAOjB,MAAP;AAEAD,GAAG,CAACQ,GAAJ,CAAQP,MAAR;AACAD,GAAG,CAACmB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B;AAAA,SAAMV,OAAO,CAACC,GAAR,qCAAyCO,OAAO,CAACC,GAAR,CAAYC,IAArD,EAAN;AAAA,CAA7B","sourcesContent":["import dotenv from \"dotenv\"\r\nimport express, {Router} from \"express\"\r\nimport bodyParser from 'body-parser'\r\nimport routes from './routes'\r\n\r\ndotenv.config()\r\n\r\nconst app = express()\r\nconst router = Router();\r\nconst bodyParserJSON = bodyParser.json();\r\nconst bodyParserURLEncoded = bodyParser.urlencoded({ extended: true });\r\n\r\napp.use(bodyParserJSON);\r\napp.use(bodyParserURLEncoded);\r\n\r\nrouter.use(function (req, res, next) {\r\n    console.log(req.body)\r\n    if(req.body.CurrentTaskConfidence <= 0.5){\r\n        let responseObject = {\r\n            \"actions\": [\r\n                {\r\n                    \"redirect\": \"task://fallback\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        return res.json(responseObject)\r\n    }\r\n\r\n    next()\r\n})\r\n\r\nrouter.get('/', (req, res) => res.send('Hello World!'))\r\n\r\nroutes(router)\r\n\r\napp.use(router)\r\napp.listen(process.env.PORT, () => console.log(`Immibot listening on port ${process.env.PORT}`))"],"file":"server.js"}