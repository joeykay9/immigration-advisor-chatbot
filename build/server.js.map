{"version":3,"sources":["../src/server.js"],"names":["dotenv","config","app","bodyParserJSON","bodyParser","json","bodyParserURLEncoded","urlencoded","extended","use","get","req","res","send","post","console","log","body","name","Field_name_Value","responseObject","nationality","eea","isEAA","country","tasks","find","listen","process","env","PORT"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;;AACA,IAAMC,cAAc,GAAGC,uBAAWC,IAAX,EAAvB;;AACA,IAAMC,oBAAoB,GAAGF,uBAAWG,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAA7B;;AAEAN,GAAG,CAACO,GAAJ,CAAQN,cAAR;AACAD,GAAG,CAACO,GAAJ,CAAQH,oBAAR;AAEAJ,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS,cAAT,CAAd;AAAA,CAAb;AAEAX,GAAG,CAACY,IAAJ,CAAS,gBAAT,EAA2B,UAACH,GAAD,EAAMC,GAAN,EAAc;AAErCG,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,IAAhB;AAEA,MAAIC,IAAI,GAAGP,GAAG,CAACM,IAAJ,CAASE,gBAApB;AAEA,MAAMC,cAAc,GAAG;AACnB,eAAW,CACP;AACI,aAAOF,IAAI,GAAG;AADlB,KADO,EAIP;AACI,aAAO;AADX,KAJO,EAOP;AACI,gBAAU;AACN,iBAAS,CACL,wBADK;AADH;AADd,KAPO;AADQ,GAAvB;AAkBA,SAAON,GAAG,CAACP,IAAJ,CAASe,cAAT,CAAP;AACH,CAzBD;AA2BAlB,GAAG,CAACY,IAAJ,CAAS,uBAAT,EAAkC,UAACH,GAAD,EAAMC,GAAN,EAAc;AAE5CG,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,IAAhB;AAEA,MAAII,WAAW,GAAGV,GAAG,CAACM,IAAJ,CAASE,gBAA3B;AAEA,MAAIG,GAAG,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,UAAvB,EAAmC,SAAnC,EAA8C,QAA9C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EACE,SADF,EACa,QADb,EACuB,SADvB,EACkC,QADlC,EAC4C,SAD5C,EACuD,SADvD,EACkE,SADlE,EAC6E,OAD7E,EACsF,QADtF,EAEE,eAFF,EAEmB,WAFnB,EAEgC,YAFhC,EAE8C,OAF9C,EAEuD,aAFvD,EAEsE,QAFtE,EAEgF,QAFhF,EAGE,UAHF,EAGc,SAHd,EAGyB,UAHzB,EAGqC,UAHrC,EAGiD,OAHjD,EAG0D,QAH1D,EAGoE,aAHpE,CAAV;;AAKA,WAASC,KAAT,CAAeC,OAAf,EAAuB;AACnB,WAAOA,OAAO,IAAIH,WAAlB;AACH;;AAED,MAAID,cAAc,GAAG;AACjB,eAAW,CACb;AACC,aAAO;AADR,KADa,EAIb;AACC,aAAO;AADR,KAJa,EAOb;AACC,gBAAU;AACNK,QAAAA,KAAK,EAAE,CACH,8BADG;AADD;AADX,KAPa;AADM,GAArB;;AAkBA,MAAGH,GAAG,CAACI,IAAJ,CAASH,KAAT,CAAH,EAAmB;AACfH,IAAAA,cAAc,GAAG;AACb,iBAAW,CACb;AACC,eAAO;AADR,OADa,EAIb;AACC,oBAAY;AADb,OAJa;AADE,KAAjB;AAUH;;AAEDL,EAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACI,IAAJ,CAASH,KAAT,CAAZ;AAEA,SAAOX,GAAG,CAACP,IAAJ,CAASe,cAAT,CAAP;AACH,CAjDD;AAmDAlB,GAAG,CAACyB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B;AAAA,SAAMf,OAAO,CAACC,GAAR,qDAAyDY,OAAO,CAACC,GAAR,CAAYC,IAArE,EAAN;AAAA,CAA7B","sourcesContent":["import dotenv from \"dotenv\"\r\nimport express from \"express\"\r\nimport bodyParser from 'body-parser'\r\n\r\ndotenv.config()\r\n\r\nconst app = express()\r\nconst bodyParserJSON = bodyParser.json();\r\nconst bodyParserURLEncoded = bodyParser.urlencoded({ extended: true });\r\n\r\napp.use(bodyParserJSON);\r\napp.use(bodyParserURLEncoded);\r\n\r\napp.get('/', (req, res) => res.send('Hello World!'))\r\n\r\napp.post('/name-response', (req, res) => {\r\n    \r\n    console.log(req.body)\r\n\r\n    let name = req.body.Field_name_Value\r\n    \r\n    const responseObject = {\r\n        \"actions\": [\r\n            {\r\n                \"say\": name + \" ðŸ˜Š. That's a lovely name.\"\r\n            },\r\n            {\r\n                \"say\": \"What is your nationality?\"\r\n            },\r\n            {\r\n                \"listen\": {\r\n                    \"tasks\": [\r\n                        \"respond_to_nationality\"\r\n                    ]\r\n                }\r\n            },\r\n        ]\r\n    };\r\n    \r\n    return res.json(responseObject)\r\n})\r\n\r\napp.post('/nationality-response', (req, res) => {\r\n    \r\n    console.log(req.body)\r\n\r\n    let nationality = req.body.Field_name_Value\r\n    \r\n    let eea = [\"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\", \"Czechia\", \"Denmark\", \"Estonia\",\r\n                \"Finland\", \"France\", \"Germany\", \"Greece\", \"Hungary\", \"Iceland\", \"Ireland\", \"Italy\", \"Latvia\", \r\n                \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\", \"Norway\", \"Poland\", \r\n                \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\", \"Spain\", \"Sweden\", \"Switzerland\"]\r\n    \r\n    function isEAA(country){\r\n        return country == nationality\r\n    }      \r\n    \r\n    let responseObject = {\r\n        \"actions\": [\r\n    \t\t{\r\n    \t\t\t\"say\": \"Ok. Great.\"\r\n    \t\t},\r\n    \t\t{\r\n    \t\t\t\"say\": \"Why do you want to come to the UK?\"\r\n    \t\t},\r\n    \t\t{\r\n    \t\t\t\"listen\": {\r\n    \t\t\t    tasks: [\r\n    \t\t\t        \"respond_to_purpose_for_entry\"\r\n    \t\t        ]\r\n    \t\t\t}\r\n    \t\t},\r\n        ]\r\n    };\r\n    \r\n    if(eea.find(isEAA)){\r\n        responseObject = {\r\n            \"actions\": [\r\n        \t\t{\r\n        \t\t\t\"say\": \"You do not need a visa to come to the UK. ðŸ˜Š\"\r\n        \t\t},\r\n        \t\t{\r\n        \t\t\t\"redirect\": \"task://goodbye\"\r\n        \t\t}\r\n            ]\r\n        };\r\n    }\r\n    \r\n    console.log(eea.find(isEAA))\r\n    \r\n    return res.json(responseObject)\r\n})\r\n\r\napp.listen(process.env.PORT, () => console.log(`Example app listening at http://localhost:${process.env.PORT}`))"],"file":"server.js"}